package UAT.BrookstoneTests;

import java.io.IOException;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.testng.Assert;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import pageObjects.BkstChkoutBillingPage;
import pageObjects.BkstChkoutOptionstPage;
import pageObjects.BkstChkoutShippingPage;
import pageObjects.BkstMainpage;
import pageObjects.BkstProduct;
import pageObjects.BkstProductsOutline;
import pageObjects.BkstSubmitOrder;
import resources.base;

public class TestCase3 extends base {
	
	public static Logger log =LogManager.getLogger(base.class.getName());


	@BeforeTest(groups= {"Smoke"})
	public void initialize() throws IOException {

		driver = initializeDriver();
		//log.info("Driver is initialized");

		// 1. Go to Brookstone.com.
		String env = prop.getProperty("environment");
		driver.get(prop.getProperty(env));
		driver.manage().window().maximize();
		//log.info("Navigated to Home page");

	}
	
	
	@AfterTest(groups= {"Smoke"})
	public void teardown() {

		driver.close();
		driver = null;

	}

@Test(groups= {"Smoke"})
	
	public void TC3() throws InterruptedException, IOException {
	    BkstMainpage rd = new BkstMainpage(driver);
		rd.closeButton().click();
		rd.ProdLine().click();
		
		BkstProductsOutline mg = new BkstProductsOutline(driver);
		mg.Prod1().click();
		
		BkstProduct pd = new BkstProduct(driver);
		pd.Add_to_cart().click();
		Thread.sleep(5000);
		pd.Go_to_chkout().click();
		
		BkstChkoutOptionstPage ck = new BkstChkoutOptionstPage(driver);
		Assert.assertEquals(ck.title(), "Brookstone Account Login");
		log.info("TC1 Verified 4. Verify that you are taken to the Secure Checkout landing page");
		
		ck.Guest_chkout().click();
		
		BkstChkoutShippingPage sh = new BkstChkoutShippingPage(driver);
	
	}


}

	



		BkstChkoutShippingPage sh = new BkstChkoutShippingPage(driver);

		sh.First_Name().sendKeys(prop.getProperty("FirstName"));
		sh.Last_Name().sendKeys(prop.getProperty("LastName"));
		sh.Address1().sendKeys(prop.getProperty("Address1"));
		sh.City().sendKeys(prop.getProperty("City"));
		sh.Zipcode().sendKeys(prop.getProperty("Zipcode"));
		sh.Phone().sendKeys(prop.getProperty("Phone"));
		Thread.sleep(5000);
		sh.Continue().click();

		
		BkstChkoutBillingPage bl = new BkstChkoutBillingPage(driver);

		bl.Email().sendKeys(prop.getProperty("Email"));
		String FullName = prop.getProperty("FirstName") + " " + prop.getProperty("LastName");
		bl.CardName().sendKeys(FullName);
		bl.CardNumber().sendKeys(prop.getProperty("VisaCardNo"));
		bl.CardCVV().sendKeys(prop.getProperty("VisaCardCvv"));
		bl.dropDown().click();
		bl.CardExpYear().click();

		bl.ContinueChkout().click();
		
		BkstSubmitOrder sb = new BkstSubmitOrder(driver);
		
		sb.submitOrder().click();
		sb.customerSurvey().click();
		
		
		
